pipeline {
     environment {
       IMAGE_NAME = "filrougegr3"
       IMAGE_TAG_LATEST = "latest" /* $toto */
       IMAGE_TAG_STAGING = "staging"
       PRODUCTION = "groupe3-production"
     }
     agent none
     stages {
         stage('Build image and push Image on private docker registry') {
             agent any
             steps {
                script {
                  sh '''
                    docker rm -f $IMAGE_NAME
                    sudo rm -rf $WORKSPACE/site
                    mkdir -p $WORKSPACE/site
                    cd $WORKSPACE/site
                    git clone https://github.com/stephaneinfo/projet_fil_rouge_ibformation.git
                    cp -fR $WORKSPACE/site/projet_fil_rouge_ibformation/* .
                    docker build -t $IMAGE_NAME:$IMAGE_TAG_STAGING .
                    docker tag $IMAGE_NAME:$IMAGE_TAG_STAGING master:5000/$IMAGE_NAME:$IMAGE_TAG_STAGING
                    docker push master:5000/$IMAGE_NAME:$IMAGE_TAG_STAGING
                    sudo rm -rf $WORKSPACE/site/projet_fil_rouge_ibformation
                  '''
                }
             }
        }
        stage('Run container based on builded image') {
            agent any
            steps {
               script {
                 sh '''
                    docker run -dit --name $IMAGE_NAME -p 8081:80 master:5000/$IMAGE_NAME:$IMAGE_TAG_STAGING
                    sleep 5
                 '''
               }
            }
       }
      
       stage('Test image') {
           agent any
           steps {
              script {
                sh '''
                    curl http://192.168.99.10:8081 | grep -q "Bootstrap"
                '''
              }
           }
      }
      
      stage('Clean Container') {
          agent any
          steps {
             script {
               sh '''
                 docker stop $IMAGE_NAME
                 docker rm -f $IMAGE_NAME
               '''
             }
          }
     }

     stage('Prepare ansible environment') {
            agent any
            environment {
                PRIVATE_KEY = credentials('private_keys_jenkins')
            }
            steps {
                sh '''
                     cp  $PRIVATE_KEY  id_rsa
                     chmod 600 id_rsa
                '''
            }
     }              
          
     stage('Push image in staging and deploy it') { 
           agent any
           steps {
               script {
                 sh '''
                     cd $WORKSPACE/site/ressourcesansible/ && ansible-playbook playbooks/deploy_app.yml  --private-key ../id_rsa -e env=staging -e imageb=$IMAGE_NAME:$IMAGE_TAG_STAGING               
                 '''
               }
           }
     }
     
    
     stage ('Push Image on private docker registry_latest') {
          agent any
          steps {
             script {
               sh '''
                    docker tag $IMAGE_NAME:$IMAGE_TAG_LATEST master:5000/$IMAGE_NAME:$IMAGE_TAG_LATEST
                    docker push master:5000/$IMAGE_NAME:$IMAGE_TAG_LATEST
               '''
             }
          }
    } 
    
    
    
    
     stage('Push image in production and deploy it') {
      agent any
      steps {
          sh'''
               cd $WORKSPACE/site/ressourcesansible/ && ansible-playbook playbooks/deploy_app.yml  --private-key ../id_rsa -e env=prod -e imageb=$IMAGE_NAME:$IMAGE_TAG_LATEST
          '''
      }
     }
    }
}
